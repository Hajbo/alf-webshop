{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport axios from 'axios';\nimport { authApiTokenUrl } from '../config/urlconfig';\nimport { apiUsername, apiPassword } from '../config/authcredentials';\nimport { handleResponse } from '../helpers/handle-response';\nvar currentUserSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('currentUser')));\nexport var authenticationService = {\n  login: login,\n  logout: logout,\n  currentUser: currentUserSubject.asObservable(),\n\n  get currentUserValue() {\n    return currentUserSubject.value;\n  }\n\n};\n\nfunction login(username, password) {\n  var encodedAuth = new Buffer(\"\".concat(apiUsername, \":\").concat(apiPassword)).toString('base64');\n  return axios.post(\"\".concat(authApiTokenUrl, \"&username=\").concat(username, \"&password=\").concat(password), '', {\n    headers: {\n      \"Authorization\": \"Basic \".concat(encodedAuth)\n    }\n  }).then(handleResponse).then(function (user) {\n    // store user details and jwt token in local storage to keep user logged in between page refreshes\n    localStorage.setItem('currentUser', JSON.stringify(user));\n    currentUserSubject.next(user);\n    return user;\n  });\n}\n\nfunction logout() {\n  // remove user from local storage to log user out\n  localStorage.removeItem('currentUser');\n  currentUserSubject.next(null);\n}","map":{"version":3,"sources":["/Users/hajbo/BME/alkfelj/ALFHF2019-whyarewestillalive/client/src/auth/authenticationService.js"],"names":["BehaviorSubject","axios","authApiTokenUrl","apiUsername","apiPassword","handleResponse","currentUserSubject","JSON","parse","localStorage","getItem","authenticationService","login","logout","currentUser","asObservable","currentUserValue","value","username","password","encodedAuth","Buffer","toString","post","headers","then","user","setItem","stringify","next","removeItem"],"mappings":"AAAA,SAASA,eAAT,QAAgC,MAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,eAAT,QAAgC,qBAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,2BAAzC;AACA,SAASC,cAAT,QAA+B,4BAA/B;AAEA,IAAMC,kBAAkB,GAAG,IAAIN,eAAJ,CAAoBO,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAApB,CAA3B;AAEA,OAAO,IAAMC,qBAAqB,GAAG;AACjCC,EAAAA,KAAK,EAALA,KADiC;AAEjCC,EAAAA,MAAM,EAANA,MAFiC;AAGjCC,EAAAA,WAAW,EAAER,kBAAkB,CAACS,YAAnB,EAHoB;;AAIjC,MAAIC,gBAAJ,GAAwB;AAAE,WAAOV,kBAAkB,CAACW,KAA1B;AAAiC;;AAJ1B,CAA9B;;AAOP,SAASL,KAAT,CAAeM,QAAf,EAAyBC,QAAzB,EAAmC;AAC/B,MAAIC,WAAW,GAAG,IAAIC,MAAJ,WAAclB,WAAd,cAA6BC,WAA7B,GAA4CkB,QAA5C,CAAqD,QAArD,CAAlB;AAEA,SAAOrB,KAAK,CAACsB,IAAN,WACArB,eADA,uBAC4BgB,QAD5B,uBACiDC,QADjD,GAEH,EAFG,EAGH;AACIK,IAAAA,OAAO,EAAE;AAAC,uCAA0BJ,WAA1B;AAAD;AADb,GAHG,EAONK,IAPM,CAODpB,cAPC,EAQNoB,IARM,CAQD,UAAAC,IAAI,EAAI;AACV;AACAjB,IAAAA,YAAY,CAACkB,OAAb,CAAqB,aAArB,EAAoCpB,IAAI,CAACqB,SAAL,CAAeF,IAAf,CAApC;AACApB,IAAAA,kBAAkB,CAACuB,IAAnB,CAAwBH,IAAxB;AAEA,WAAOA,IAAP;AACH,GAdM,CAAP;AAeH;;AAED,SAASb,MAAT,GAAkB;AACd;AACAJ,EAAAA,YAAY,CAACqB,UAAb,CAAwB,aAAxB;AACAxB,EAAAA,kBAAkB,CAACuB,IAAnB,CAAwB,IAAxB;AACH","sourcesContent":["import { BehaviorSubject } from 'rxjs';\nimport axios from 'axios';\n\nimport { authApiTokenUrl } from '../config/urlconfig';\nimport { apiUsername, apiPassword } from '../config/authcredentials';\nimport { handleResponse } from '../helpers/handle-response';\n\nconst currentUserSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('currentUser')));\n\nexport const authenticationService = {\n    login,\n    logout,\n    currentUser: currentUserSubject.asObservable(),\n    get currentUserValue () { return currentUserSubject.value }\n};\n\nfunction login(username, password) {\n    var encodedAuth = new Buffer(`${apiUsername}:${apiPassword}`).toString('base64');\n\n    return axios.post(\n        `${authApiTokenUrl}&username=${username}&password=${password}`, \n        '',\n        {\n            headers: {\"Authorization\": `Basic ${encodedAuth}`}\n        }\n    )\n    .then(handleResponse)\n    .then(user => {\n        // store user details and jwt token in local storage to keep user logged in between page refreshes\n        localStorage.setItem('currentUser', JSON.stringify(user));\n        currentUserSubject.next(user);\n\n        return user;\n    });\n}\n\nfunction logout() {\n    // remove user from local storage to log user out\n    localStorage.removeItem('currentUser');\n    currentUserSubject.next(null);\n}"]},"metadata":{},"sourceType":"module"}