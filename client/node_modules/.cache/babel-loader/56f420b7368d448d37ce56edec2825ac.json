{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { authApiTokenUrl } from '../config/urlconfig';\nimport { apiUsername, apiPassword } from '../config/authcredentials';\nimport { handleResponse } from '../_helpers';\nvar currentUserSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('currentUser')));\nexport var authenticationService = {\n  login: login,\n  logout: logout,\n  currentUser: currentUserSubject.asObservable(),\n\n  get currentUserValue() {\n    return currentUserSubject.value;\n  }\n\n};\n\nfunction login(username, password) {\n  var encodedAuth = new Buffer(\"\".concat(apiUsername, \":\").concat(apiPassword)).toString('base64');\n  var requestOptions = {\n    method: 'POST',\n    headers: {\n      'Authorization': \"Basic \".concat(encodedAuth)\n    }\n  };\n  return fetch(\"\".concat(authApiTokenUrl, \"&username=\").concat(username, \"&password=\").concat(password), requestOptions).then(handleResponse).then(function (user) {\n    // store user details and jwt token in local storage to keep user logged in between page refreshes\n    var userdata = JSON.parse(Buffer(user.access_token, 'base64').toString('ascii'));\n    var currentUser = {\n      'userdata': userdata,\n      'tokendata': user\n    };\n    localStorage.setItem('currentUser', JSON.stringify(currentUser));\n    currentUserSubject.next(user);\n    return user;\n  });\n}\n\nfunction logout() {\n  // remove user from local storage to log user out\n  localStorage.removeItem('currentUser');\n  currentUserSubject.next(null);\n}","map":{"version":3,"sources":["/Users/hajbo/BME/alkfelj/ALFHF2019-whyarewestillalive/client/src/_services/authenticationService.js"],"names":["BehaviorSubject","authApiTokenUrl","apiUsername","apiPassword","handleResponse","currentUserSubject","JSON","parse","localStorage","getItem","authenticationService","login","logout","currentUser","asObservable","currentUserValue","value","username","password","encodedAuth","Buffer","toString","requestOptions","method","headers","fetch","then","user","userdata","access_token","setItem","stringify","next","removeItem"],"mappings":"AAAA,SAASA,eAAT,QAAgC,MAAhC;AAEA,SAASC,eAAT,QAAgC,qBAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,2BAAzC;AACA,SAASC,cAAT,QAA+B,aAA/B;AAEA,IAAMC,kBAAkB,GAAG,IAAIL,eAAJ,CAAoBM,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAApB,CAA3B;AAEA,OAAO,IAAMC,qBAAqB,GAAG;AACjCC,EAAAA,KAAK,EAALA,KADiC;AAEjCC,EAAAA,MAAM,EAANA,MAFiC;AAGjCC,EAAAA,WAAW,EAAER,kBAAkB,CAACS,YAAnB,EAHoB;;AAIjC,MAAIC,gBAAJ,GAAwB;AAAE,WAAOV,kBAAkB,CAACW,KAA1B;AAAiC;;AAJ1B,CAA9B;;AAOP,SAASL,KAAT,CAAeM,QAAf,EAAyBC,QAAzB,EAAmC;AAC/B,MAAIC,WAAW,GAAG,IAAIC,MAAJ,WAAclB,WAAd,cAA6BC,WAA7B,GAA4CkB,QAA5C,CAAqD,QAArD,CAAlB;AACA,MAAMC,cAAc,GAAG;AACnBC,IAAAA,MAAM,EAAE,MADW;AAEnBC,IAAAA,OAAO,EAAE;AACL,uCAA0BL,WAA1B;AADK;AAFU,GAAvB;AAOA,SAAOM,KAAK,WAAIxB,eAAJ,uBAAgCgB,QAAhC,uBAAqDC,QAArD,GAAiEI,cAAjE,CAAL,CACFI,IADE,CACGtB,cADH,EAEFsB,IAFE,CAEG,UAAAC,IAAI,EAAI;AACV;AACA,QAAIC,QAAQ,GAAGtB,IAAI,CAACC,KAAL,CAAWa,MAAM,CAACO,IAAI,CAACE,YAAN,EAAoB,QAApB,CAAN,CAAoCR,QAApC,CAA6C,OAA7C,CAAX,CAAf;AACA,QAAIR,WAAW,GAAG;AACd,kBAAYe,QADE;AAEd,mBAAaD;AAFC,KAAlB;AAIAnB,IAAAA,YAAY,CAACsB,OAAb,CAAqB,aAArB,EAAoCxB,IAAI,CAACyB,SAAL,CAAelB,WAAf,CAApC;AACAR,IAAAA,kBAAkB,CAAC2B,IAAnB,CAAwBL,IAAxB;AAEA,WAAOA,IAAP;AACH,GAbE,CAAP;AAcH;;AAED,SAASf,MAAT,GAAkB;AACd;AACAJ,EAAAA,YAAY,CAACyB,UAAb,CAAwB,aAAxB;AACA5B,EAAAA,kBAAkB,CAAC2B,IAAnB,CAAwB,IAAxB;AACH","sourcesContent":["import { BehaviorSubject } from 'rxjs';\n\nimport { authApiTokenUrl } from '../config/urlconfig';\nimport { apiUsername, apiPassword } from '../config/authcredentials';\nimport { handleResponse } from '../_helpers';\n\nconst currentUserSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('currentUser')));\n\nexport const authenticationService = {\n    login,\n    logout,\n    currentUser: currentUserSubject.asObservable(),\n    get currentUserValue () { return currentUserSubject.value }\n};\n\nfunction login(username, password) {\n    var encodedAuth = new Buffer(`${apiUsername}:${apiPassword}`).toString('base64');\n    const requestOptions = {\n        method: 'POST',\n        headers: { \n            'Authorization': `Basic ${encodedAuth}`\n         }\n    };\n\n    return fetch(`${authApiTokenUrl}&username=${username}&password=${password}`, requestOptions)\n        .then(handleResponse)\n        .then(user => {\n            // store user details and jwt token in local storage to keep user logged in between page refreshes\n            var userdata = JSON.parse(Buffer(user.access_token, 'base64').toString('ascii'));\n            var currentUser = {\n                'userdata': userdata,\n                'tokendata': user\n            }\n            localStorage.setItem('currentUser', JSON.stringify(currentUser));\n            currentUserSubject.next(user);\n\n            return user;\n        });\n}\n\nfunction logout() {\n    // remove user from local storage to log user out\n    localStorage.removeItem('currentUser');\n    currentUserSubject.next(null);\n}"]},"metadata":{},"sourceType":"module"}