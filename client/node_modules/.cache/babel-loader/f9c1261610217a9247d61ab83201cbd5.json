{"ast":null,"code":"import _objectSpread from \"/Users/hajbo/BME/alkfelj/ALFHF2019-whyarewestillalive/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport urls from \"./constants\";\nimport axios from \"axios\";\n\nvar getData = function getData(url) {\n  return axios.get(url).then(function (response) {\n    return response.data;\n  });\n};\n\nvar postData = function postData(url, body) {\n  axios.post(url, JSON.stringify(body), {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(function (response) {\n    return response.data;\n  });\n};\n\nvar getCategories = function getCategories() {\n  return getData(urls.CATEGORIES_URL);\n};\n\nvar getProductsPerCategory = function getProductsPerCategory(category) {\n  return getData(urls.CATEGORIES_URL + '/' + category.id + '/products');\n};\n\nvar getCartLinesFromCartData = function getCartLinesFromCartData(cart, products) {\n  var result = [];\n  Object.keys(cart).forEach(function (k) {\n    var product = products.find(function (p) {\n      return p.id == k;\n    });\n\n    var item = _objectSpread({}, product, {\n      quantity: cart[k]\n    });\n\n    result.push(item);\n  });\n  return result;\n};\n\nvar getCartDataToPost = function getCartDataToPost(cart, name, address) {\n  var result = {\n    name: name,\n    address: address\n  };\n  var items = {};\n\n  for (var key in cart) {\n    items[Number(key)] = cart[key];\n  }\n\n  result.quantityPerProductId = items;\n  return result;\n};\n\nvar countSubTotal = function countSubTotal(cart, products) {\n  var total = 0;\n  Object.keys(cart).forEach(function (k) {\n    var product = products.find(function (p) {\n      return p.id == k;\n    });\n    total += Number(product.price) * k;\n  });\n  return total;\n};\n\nexport { getData, postData, getCategories, getProductsPerCategory, getCartLinesFromCartData, getCartDataToPost, countSubTotal };","map":{"version":3,"sources":["/Users/hajbo/BME/alkfelj/ALFHF2019-whyarewestillalive/client/src/util/util.js"],"names":["urls","axios","getData","url","get","then","response","data","postData","body","post","JSON","stringify","headers","getCategories","CATEGORIES_URL","getProductsPerCategory","category","id","getCartLinesFromCartData","cart","products","result","Object","keys","forEach","k","product","find","p","item","quantity","push","getCartDataToPost","name","address","items","key","Number","quantityPerProductId","countSubTotal","total","price"],"mappings":"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","sourcesContent":["import urls from \"./constants\";\r\nimport axios from \"axios\";\r\n\r\nconst getData = (url) => {\r\n    return axios.get(url)\r\n        .then(response => response.data)\r\n};\r\n\r\nconst postData = (url, body) => {\r\n    axios.post(url, JSON.stringify(body), {headers : {\"Content-Type\": \"application/json\"}})\r\n        .then(response => response.data)\r\n};\r\n\r\nconst getCategories = () => getData(urls.CATEGORIES_URL);\r\n\r\nconst getProductsPerCategory = (category) => getData(urls.CATEGORIES_URL + '/' + category.id + '/products');\r\n\r\nconst getCartLinesFromCartData = (cart, products) => {\r\n    let result = [];\r\n    Object.keys(cart).forEach(k => {\r\n        let product = products.find(p => p.id == k);\r\n        let item = {...product, quantity: cart[k]};\r\n        result.push(item);\r\n    });\r\n    return result;\r\n};\r\n\r\nconst getCartDataToPost = (cart, name, address) => {\r\n    let result = {name: name, address: address};\r\n\r\n    let items = {};\r\n    for (let key in cart)\r\n        items[Number(key)] = cart[key];\r\n    result.quantityPerProductId = items;\r\n    return result;\r\n};\r\n\r\nconst countSubTotal = (cart, products) => {\r\n    let total = 0;\r\n    Object.keys(cart).forEach(k => {\r\n        let product = products.find(p => p.id == k);\r\n        total += (Number(product.price) * k);\r\n    });\r\n    return total;\r\n};\r\n\r\nexport {\r\n    getData,\r\n    postData,\r\n    getCategories,\r\n    getProductsPerCategory,\r\n    getCartLinesFromCartData,\r\n    getCartDataToPost,\r\n    countSubTotal\r\n}"]},"metadata":{},"sourceType":"module"}